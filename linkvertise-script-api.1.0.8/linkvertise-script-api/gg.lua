if not _G._PREMIUM_LOAD_KEY_ then return end

local PremiumUILibrary = {}

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")

PremiumUILibrary.UI = {}
PremiumUILibrary.Theme = {
Â  Â  Background = Color3.fromRGB(20, 20, 20),
Â  Â  Primary = Color3.fromRGB(200, 25, 25),
Â  Â  DarkRed = Color3.fromRGB(120, 15, 15),
Â  Â  Secondary = Color3.fromRGB(35, 35, 35),
Â  Â  Accent = Color3.fromRGB(0, 200, 255),
Â  Â  Text = Color3.fromRGB(220, 220, 220),
Â  Â  PlaceholderText = Color3.fromRGB(150, 150, 150),
Â  Â  DiscordBlurple = Color3.fromRGB(88, 101, 242),
}

PremiumUILibrary.GradientColors = {
Â  Â  {Color3.fromRGB(0,255,255), Color3.fromRGB(255,0,255)},
Â  Â  {Color3.fromRGB(255,0,0), Color3.fromRGB(255,255,0)},
Â  Â  {Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255)},
Â  Â  {Color3.fromRGB(255,128,0), Color3.fromRGB(0,255,128)},
Â  Â  {Color3.fromRGB(190, 45, 255), Color3.fromRGB(255, 155, 45)},
Â  Â  {Color3.fromRGB(255, 50, 50), Color3.fromRGB(50, 200, 255)},
Â  Â  {Color3.fromRGB(80, 255, 120), Color3.fromRGB(255, 80, 200)},
}
PremiumUILibrary.Gradients = {}

function PremiumUILibrary:applyButtonEffects(button, baseColor, hoverColor, pressColor)
Â  Â  local originalSize = button.Size
Â  Â  button.MouseEnter:Connect(function()
Â  Â  Â  Â  TweenService:Create(button,TweenInfo.new(0.15),{BackgroundColor3=hoverColor,Size=UDim2.new(1,0,0,42)}):Play()
Â  Â  end)
Â  Â  button.MouseLeave:Connect(function()
Â  Â  Â  Â  TweenService:Create(button,TweenInfo.new(0.15),{BackgroundColor3=baseColor,Size=originalSize}):Play()
Â  Â  end)
Â  Â  button.MouseButton1Down:Connect(function()
Â  Â  Â  Â  TweenService:Create(button,TweenInfo.new(0.1),{BackgroundColor3=pressColor}):Play()
Â  Â  end)
Â  Â  button.MouseButton1Up:Connect(function()
Â  Â  Â  Â  TweenService:Create(button,TweenInfo.new(0.15),{BackgroundColor3=hoverColor,Size=UDim2.new(1,0,0,42)}):Play()
Â  Â  end)
end

function PremiumUILibrary:createMainUI()
Â  Â  local playerGui=Players.LocalPlayer:WaitForChild("PlayerGui")
Â  Â  local screenGui=Instance.new("ScreenGui")
Â  Â  screenGui.Name="PremiumUI_Main"
Â  Â  screenGui.ResetOnSpawn=false
Â  Â  screenGui.IgnoreGuiInset = true
Â  Â  screenGui.Parent=playerGui
Â  Â  self.UI.ScreenGui=screenGui
Â  Â  
Â  Â  local blur = Instance.new("BlurEffect")
Â  Â  blur.Name = "PremiumUIBlur"
Â  Â  blur.Size = 24
Â  Â  blur.Parent = Lighting
Â  Â  self.UI.BlurEffect = blur
Â  Â  
Â  Â  local mainFrame=Instance.new("Frame")
Â  Â  mainFrame.Name="PremiumFrame"
Â  Â  mainFrame.Size=UDim2.new(0,400,0,500)
Â  Â  mainFrame.Position=UDim2.new(0.5,0,0.5,0)
Â  Â  mainFrame.AnchorPoint=Vector2.new(0.5,0.5)
Â  Â  mainFrame.BackgroundColor3=self.Theme.Background
Â  Â  mainFrame.BorderSizePixel=0
Â  Â  mainFrame.ClipsDescendants = true
Â  Â  mainFrame.Parent=screenGui
Â  Â  self.UI.MainFrame=mainFrame
Â  Â  
Â  Â  local corner=Instance.new("UICorner")
Â  Â  corner.CornerRadius=UDim.new(0,12)
Â  Â  corner.Parent=mainFrame
Â  Â  
Â  Â  local stroke=Instance.new("UIStroke")
Â  Â  stroke.Thickness=6
Â  Â  stroke.Color = Color3.fromRGB(255, 255, 255)
Â  Â  stroke.ApplyStrokeMode=Enum.ApplyStrokeMode.Border
Â  Â  stroke.Parent=mainFrame
Â  Â  self.UI.MainStroke = stroke
Â  Â  
Â  Â  local gradient = Instance.new("UIGradient")
Â  Â  local pick = self.GradientColors[math.random(1, #self.GradientColors)]
Â  Â  gradient.Color = ColorSequence.new({
Â  Â  Â  Â  ColorSequenceKeypoint.new(0.0, pick[1]),
Â  Â  Â  Â  ColorSequenceKeypoint.new(1.0, pick[2])
Â  Â  })
Â  Â  gradient.Rotation = 0
Â  Â  gradient.Parent = stroke
Â  Â  table.insert(self.Gradients, gradient)
Â  Â  self.UI.MainGradient = gradient

Â  Â  local scanline = Instance.new("Frame")
Â  Â  scanline.Name = "Scanline"
Â  Â  scanline.Size = UDim2.new(1, 0, 0, 4)
Â  Â  scanline.Position = UDim2.new(0, 0, -0.1, 0)
Â  Â  scanline.BackgroundColor3 = pick[1]
Â  Â  scanline.BackgroundTransparency = 0.75
Â  Â  scanline.BorderSizePixel = 0
Â  Â  scanline.ZIndex = 2
Â  Â  scanline.Parent = mainFrame
Â  Â  self.UI.Scanline = scanline
Â  Â  
Â  Â  local padding=Instance.new("UIPadding")
Â  Â  padding.PaddingTop=UDim.new(0,20)
Â  Â  padding.PaddingBottom=UDim.new(0,10)
Â  Â  padding.PaddingLeft=UDim.new(0,20)
Â  Â  padding.PaddingRight=UDim.new(0,20)
Â  Â  padding.Parent=mainFrame
Â  Â  
Â  Â  local listLayout=Instance.new("UIListLayout")
Â  Â  listLayout.FillDirection=Enum.FillDirection.Vertical
Â  Â  listLayout.SortOrder=Enum.SortOrder.LayoutOrder
Â  Â  listLayout.Padding=UDim.new(0,10)
Â  Â  listLayout.Parent=mainFrame
Â  Â  
Â  Â  local titleLabel=Instance.new("TextLabel")
Â  Â  titleLabel.LayoutOrder = 1
Â  Â  titleLabel.Size = UDim2.new(1, 0, 0, 30)
Â  Â  titleLabel.Text = "Fx_Scripts - Premium Loader"
Â  Â  titleLabel.Font = Enum.Font.GothamBold
Â  Â  titleLabel.TextColor3 = self.Theme.Text
Â  Â  titleLabel.TextSize = 20
Â  Â  titleLabel.BackgroundTransparency = 1
Â  Â  titleLabel.Parent = mainFrame
Â  Â  self.UI.TitleLabel = titleLabel

Â  Â  local function createSecurityLine(order)
Â  Â  Â  Â  local line = Instance.new("Frame")
Â  Â  Â  Â  line.Name = "SecurityLine"
Â  Â  Â  Â  line.LayoutOrder = order
Â  Â  Â  Â  line.Size = UDim2.new(1, 0, 0, 2)
Â  Â  Â  Â  line.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Â  Â  Â  Â  line.BorderSizePixel = 0
Â  Â  Â  Â  line.Parent = mainFrame
Â  Â  Â  Â  local lineStroke = Instance.new("UIStroke")
Â  Â  Â  Â  lineStroke.Thickness = 2
Â  Â  Â  Â  lineStroke.Color = Color3.fromRGB(255, 255, 255)
Â  Â  Â  Â  lineStroke.Parent = line
Â  Â  Â  Â  local lineGradient = Instance.new("UIGradient")
Â  Â  Â  Â  lineGradient.Color = gradient.Color
Â  Â  Â  Â  lineGradient.Rotation = math.random(0, 360)
Â  Â  Â  Â  lineGradient.Parent = lineStroke
Â  Â  Â  Â  table.insert(self.Gradients, lineGradient)
Â  Â  Â  Â  return line
Â  Â  end

Â  Â  createSecurityLine(2)

Â  Â  local infoLabel=Instance.new("TextLabel")
Â  Â  infoLabel.LayoutOrder=3
Â  Â  infoLabel.Size=UDim2.new(1,0,0,30)
Â  Â  infoLabel.Text="Status: Key Verified. Ready."
Â  Â  infoLabel.Font=Enum.Font.Gotham
Â  Â  infoLabel.TextColor3=Color3.fromRGB(50,255,50)
Â  Â  infoLabel.TextSize=18
Â  Â  infoLabel.BackgroundTransparency=1
Â  Â  infoLabel.Parent=mainFrame
Â  Â  self.UI.InfoLabel = infoLabel
Â  Â  
Â  Â  local function createButton(text,order,clr,callback)
Â  Â  Â  Â  local b=Instance.new("TextButton")
Â  Â  Â  Â  b.LayoutOrder=order
Â  Â  Â  Â  b.Size=UDim2.new(1,0,0,40)
Â  Â  Â  Â  b.BackgroundColor3=clr
Â  Â  Â  Â  b.BorderSizePixel=0
Â  Â  Â  Â  b.Font=Enum.Font.GothamBold
Â  Â  Â  Â  b.Text=text
Â  Â  Â  Â  b.TextColor3=self.Theme.Text
Â  Â  Â  Â  b.TextSize=18
Â  Â  Â  Â  b.Parent=mainFrame
Â  Â  Â  Â  
Â  Â  Â  Â  local c=Instance.new("UICorner")
Â  Â  Â  Â  c.CornerRadius=UDim.new(0,6)
Â  Â  Â  Â  c.Parent=b
Â  Â  Â  Â  
Â  Â  Â  Â  local hoverColor = clr == self.Theme.Primary and self.Theme.Primary:Lerp(Color3.new(1,1,1), 0.2) or self.Theme.Primary
Â  Â  Â  Â  self:applyButtonEffects(b,clr,hoverColor,self.Theme.DarkRed)
Â  Â  Â  Â  b.MouseButton1Click:Connect(callback)
Â  Â  Â  Â  return b
Â  Â  end
Â  Â  
Â  Â  self.UI.MainLoaderButton = createButton("Load Main Script ðŸš€",4,self.Theme.Primary,function()print("Main Script Loaded!")end)
Â  Â  self.UI.ExtraFeatureButton = createButton("Load Extra Feature (VIP)",5,self.Theme.DiscordBlurple,function()print("VIP Script Loaded!")end)

Â  Â  local toggle=Instance.new("TextButton")
Â  Â  toggle.LayoutOrder=6
Â  Â  toggle.Size=UDim2.new(1,0,0,40)
Â  Â  toggle.BackgroundColor3=self.Theme.Secondary
Â  Â  toggle.Text="Auto Farm: OFF"
Â  Â  toggle.TextColor3=self.Theme.Text
Â  Â  toggle.Font=Enum.Font.Gotham
Â  Â  toggle.TextSize=18
Â  Â  toggle.Parent=mainFrame
Â  Â  self.UI.FarmToggle = toggle
Â  Â  
Â  Â  local cornerToggle=Instance.new("UICorner")
Â  Â  cornerToggle.CornerRadius=UDim.new(0,6)
Â  Â  cornerToggle.Parent=toggle

Â  Â  local state=false
Â  Â  toggle.MouseButton1Click:Connect(function()
Â  Â  Â  Â  state=not state
Â  Â  Â  Â  toggle.Text="Auto Farm: "..(state and "ON" or "OFF")
Â  Â  Â  Â  local newColor = state and self.Theme.Primary or self.Theme.Secondary
Â  Â  Â  Â  local newHover = self.Theme.Primary
Â  Â  Â  Â  TweenService:Create(toggle, TweenInfo.new(0.2), {BackgroundColor3 = newColor}):Play()
Â  Â  Â  Â  self:applyButtonEffects(toggle, newColor, newHover, self.Theme.DarkRed)
Â  Â  Â  Â  print("Auto Farm Toggled: "..(state and "ON" or "OFF"))
Â  Â  end)
Â  Â  self:applyButtonEffects(toggle, self.Theme.Secondary, self.Theme.Primary, self.Theme.DarkRed)
Â  Â  
Â  Â  local dropdown=Instance.new("TextButton")
Â  Â  dropdown.LayoutOrder=7
Â  Â  dropdown.Size=UDim2.new(1,0,0,40)
Â  Â  dropdown.BackgroundColor3=self.Theme.Secondary
Â  Â  dropdown.Text="Select Mode: Normal"
Â  Â  dropdown.TextColor3=self.Theme.Text
Â  Â  dropdown.Font=Enum.Font.Gotham
Â  Â  dropdown.TextSize=18
Â  Â  dropdown.Parent=mainFrame
Â  Â  self.UI.ModeDropdown = dropdown

Â  Â  local cornerDropdown=Instance.new("UICorner")
Â  Â  cornerDropdown.CornerRadius=UDim.new(0,6)
Â  Â  cornerDropdown.Parent=dropdown
Â  Â  
Â  Â  local modes={"Normal","Insane","God"}
Â  Â  local i=1
Â  Â  dropdown.MouseButton1Click:Connect(function()
Â  Â  Â  Â  i=i%#modes+1
Â  Â  Â  Â  dropdown.Text="Select Mode: "..modes[i]
Â  Â  Â  Â  print("Mode set to: "..modes[i])
Â  Â  end)
Â  Â  self:applyButtonEffects(dropdown, self.Theme.Secondary, self.Theme.Primary, self.Theme.DarkRed)

Â  Â  local sliderFrame=Instance.new("Frame")
Â  Â  sliderFrame.LayoutOrder=8
Â  Â  sliderFrame.Size=UDim2.new(1,0,0,50)
Â  Â  sliderFrame.BackgroundTransparency=1
Â  Â  sliderFrame.Parent=mainFrame
Â  Â  self.UI.SliderFrame = sliderFrame
Â  Â  
Â  Â  local sliderLabel=Instance.new("TextLabel")
Â  Â  sliderLabel.Size=UDim2.new(0.5,0,1,0)
Â  Â  sliderLabel.Text="WalkSpeed: 16"
Â  Â  sliderLabel.TextColor3=self.Theme.Text
Â  Â  sliderLabel.BackgroundTransparency=1
Â  Â  sliderLabel.Font=Enum.Font.Gotham
Â  Â  sliderLabel.TextSize=16
Â  Â  sliderLabel.TextXAlignment=Enum.TextXAlignment.Left
Â  Â  sliderLabel.Parent=sliderFrame
Â  Â  self.UI.SliderLabel = sliderLabel
Â  Â  
Â  Â  local slider=Instance.new("Frame")
Â  Â  slider.Size=UDim2.new(0.5, 0, 0, 10)
Â  Â  slider.Position=UDim2.new(0.5,0,0.5,0)
Â  Â  slider.AnchorPoint = Vector2.new(0, 0.5)
Â  Â  slider.BackgroundColor3=self.Theme.Secondary
Â  Â  slider.Parent=sliderFrame
Â  Â  self.UI.WalkspeedSlider = slider
Â  Â  
Â  Â  local fill=Instance.new("Frame")
Â  Â  fill.Name = "Fill"
Â  Â  fill.Size=UDim2.new(0,0,1,0)
Â  Â  fill.BackgroundColor3=self.Theme.Primary
Â  Â  fill.Parent=slider
Â  Â  self.UI.SliderFill = fill
Â  Â  
Â  Â  local sliderCorner=Instance.new("UICorner")
Â  Â  sliderCorner.CornerRadius=UDim.new(0,5)
Â  Â  sliderCorner.Parent=slider

Â  Â  local knob=Instance.new("Frame")
Â  Â  knob.Name = "Knob"
Â  Â  knob.Size=UDim2.new(0,20,0,20)
Â  Â  knob.Position=UDim2.new(0, -10, 0.5, -10)
Â  Â  knob.BackgroundColor3=self.Theme.Text
Â  Â  knob.BorderSizePixel=0
Â  Â  knob.ZIndex=2
Â  Â  knob.Parent=slider
Â  Â  self.UI.SliderKnob = knob

Â  Â  local knobCorner=Instance.new("UICorner")
Â  Â  knobCorner.CornerRadius=UDim.new(1,0)
Â  Â  knobCorner.Parent=knob

Â  Â  local draggingSlider=false
Â  Â  local minVal, maxVal = 16, 100

Â  Â  local function updateSlider(xPos)
Â  Â  Â  Â  local pos = math.clamp(xPos, 0, slider.AbsoluteSize.X)
Â  Â  Â  Â  local ratio = pos / slider.AbsoluteSize.X
Â  Â  Â  Â  fill.Size = UDim2.new(ratio, 0, 1, 0)
Â  Â  Â  Â  knob.Position = UDim2.new(ratio, -10, 0.5, -10)
Â  Â  Â  Â  local val = minVal + ratio * (maxVal - minVal)
Â  Â  Â  Â  sliderLabel.Text = "WalkSpeed: "..math.floor(val)
Â  Â  Â  Â  
Â  Â  Â  Â  local character = Players.LocalPlayer.Character
Â  Â  Â  Â  if character and character:FindFirstChildOfClass("Humanoid") then
Â  Â  Â  Â  Â  Â  character.Humanoid.WalkSpeed = val
Â  Â  Â  Â  end
Â  Â  end

Â  Â  slider.InputBegan:Connect(function(input)
Â  Â  Â  Â  if input.UserInputType==Enum.UserInputType.MouseButton1 then
Â  Â  Â  Â  Â  Â  draggingSlider=true
Â  Â  Â  Â  Â  Â  updateSlider(input.Position.X - slider.AbsolutePosition.X)
Â  Â  Â  Â  end
Â  Â  end)

Â  Â  UserInputService.InputEnded:Connect(function(input)
Â  Â  Â  Â  if input.UserInputType==Enum.UserInputType.MouseButton1 then
Â  Â  Â  Â  Â  Â  draggingSlider=false
Â  Â  Â  Â  end
Â  Â  end)
Â  Â  
Â  Â  UserInputService.InputChanged:Connect(function(input)
Â  Â  Â  Â  if draggingSlider and input.UserInputType==Enum.UserInputType.MouseMovement then
Â  Â  Â  Â  Â  Â  updateSlider(input.Position.X - slider.AbsolutePosition.X)
Â  Â  Â  Â  end
Â  Â  end)
Â  Â  
Â  Â  task.wait(0.1)
Â  Â  updateSlider(0)

Â  Â  local keybind=Instance.new("TextButton")
Â  Â  keybind.LayoutOrder=9
Â  Â  keybind.Size=UDim2.new(1,0,0,40)
Â  Â  keybind.BackgroundColor3=self.Theme.Secondary
Â  Â  keybind.Text="Bind: RightControl"
Â  Â  keybind.TextColor3=self.Theme.Text
Â  Â  keybind.Font=Enum.Font.Gotham
Â  Â  keybind.TextSize=18
Â  Â  keybind.Parent=mainFrame
Â  Â  self.UI.KeybindButton = keybind

Â  Â  local cornerKeybind=Instance.new("UICorner")
Â  Â  cornerKeybind.CornerRadius=UDim.new(0,6)
Â  Â  cornerKeybind.Parent=keybind
Â  Â  
Â  Â  local bindingKey = false
Â  Â  local currentBind=Enum.KeyCode.RightControl
Â  Â  
Â  Â  keybind.MouseButton1Click:Connect(function()
Â  Â  Â  Â  keybind.Text="Press a key..."
Â  Â  Â  Â  bindingKey=true
Â  Â  end)
Â  Â  
Â  Â  UserInputService.InputBegan:Connect(function(input,gp)
Â  Â  Â  Â  if not gp then
Â  Â  Â  Â  Â  Â  if bindingKey then
Â  Â  Â  Â  Â  Â  Â  Â  currentBind=input.KeyCode
Â  Â  Â  Â  Â  Â  Â  Â  keybind.Text="Bind: "..tostring(currentBind.Name)
Â  Â  Â  Â  Â  Â  Â  Â  bindingKey=false
Â  Â  Â  Â  Â  Â  elseif input.KeyCode==currentBind and not bindingKey then
Â  Â  Â  Â  Â  Â  Â  Â  mainFrame.Visible=not mainFrame.Visible
Â  Â  Â  Â  Â  Â  end
Â  Â  Â  Â  end
Â  Â  end)
Â  Â  self:applyButtonEffects(keybind, self.Theme.Secondary, self.Theme.Primary, self.Theme.DarkRed)

Â  Â  createSecurityLine(10)

Â  Â  local poweredByLabel = Instance.new("TextLabel")
Â  Â  poweredByLabel.LayoutOrder = 11
Â  Â  poweredByLabel.Size = UDim2.new(1, 0, 0, 15)
Â  Â  poweredByLabel.BackgroundTransparency = 1
Â  Â  poweredByLabel.Font = Enum.Font.Gotham
Â  Â  poweredByLabel.Text = "Powered by Fx_Scripts"
Â  Â  poweredByLabel.TextColor3 = self.Theme.PlaceholderText
Â  Â  poweredByLabel.TextSize = 10
Â  Â  poweredByLabel.TextXAlignment = Enum.TextXAlignment.Center
Â  Â  poweredByLabel.Parent = mainFrame
Â  Â  
Â  Â  local drag={Dragging=false,StartPos=Vector2.new(),StartOffset=Vector2.new()}
Â  Â  
Â  Â  local function onDrag(input)
Â  Â  Â  Â  if drag.Dragging then
Â  Â  Â  Â  Â  Â  local delta=input.Position-drag.StartPos
Â  Â  Â  Â  Â  Â  mainFrame.Position=UDim2.new(0.5,drag.StartOffset.X+delta.X,0.5,drag.StartOffset.Y+delta.Y)
Â  Â  Â  Â  end
Â  Â  end

Â  Â  titleLabel.InputBegan:Connect(function(input)
Â  Â  Â  Â  if input.UserInputType==Enum.UserInputType.MouseButton1 then
Â  Â  Â  Â  Â  Â  drag.Dragging=true
Â  Â  Â  Â  Â  Â  drag.StartPos=input.Position
Â  Â  Â  Â  Â  Â  drag.StartOffset=Vector2.new(mainFrame.Position.X.Offset,mainFrame.Position.Y.Offset)
Â  Â  Â  Â  Â  Â  UserInputService.InputChanged:Connect(onDrag)
Â  Â  Â  Â  end
Â  Â  end)
Â  Â  
Â  Â  UserInputService.InputEnded:Connect(function(input)
Â  Â  Â  Â  if input.UserInputType==Enum.UserInputType.MouseButton1 then
Â  Â  Â  Â  Â  Â  drag.Dragging=false
Â  Â  Â  Â  end
Â  Â  end)
end

function PremiumUILibrary:startAnimations()
Â  Â  task.spawn(function()
Â  Â  Â  Â  while RunService.Stepped do
Â  Â  Â  Â  Â  Â  for _, gradInstance in ipairs(self.Gradients) do
Â  Â  Â  Â  Â  Â  Â  Â  if gradInstance and gradInstance.Parent then
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  local tween = TweenService:Create(gradInstance, TweenInfo.new(3, Enum.EasingStyle.Linear), {Rotation = gradInstance.Rotation + 360})
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  tween:Play()
Â  Â  Â  Â  Â  Â  Â  Â  end
Â  Â  Â  Â  Â  Â  end
Â  Â  Â  Â  Â  Â  task.wait(3)
Â  Â  Â  Â  end
Â  Â  end)

Â  Â  task.spawn(function()
Â  Â  Â  Â  local scanline = self.UI.Scanline
Â  Â  Â  Â  while scanline and scanline.Parent do
Â  Â  Â  Â  Â  Â  scanline.Position = UDim2.new(0, 0, -0.1, 0)
Â  Â  Â  Â  Â  Â  local scanTween = TweenService:Create(scanline, TweenInfo.new(2.5, Enum.EasingStyle.Linear), {Position = UDim2.new(0, 0, 1.1, 0)})
Â  Â  Â  Â  Â  Â  scanTween:Play()
Â  Â  Â  Â  Â  Â  scanTween.Completed:Wait()
Â  Â  Â  Â  Â  Â  task.wait(1)
Â  Â  Â  Â  end
Â  Â  end)
end

function PremiumUILibrary:init()
Â  Â  self:createMainUI()
Â  Â  self:startAnimations()
end

return PremiumUILibrary
